?start: statement+

?statement: assign_stmt
          | print_stmt
          | if_stmt
          | while_stmt

assign_stmt: NAME "=" expr      -> assign
print_stmt: "print" "(" expr ")" -> print
if_stmt: "if" expr ":" block     -> if
while_stmt: "while" expr ":" block -> while

block: statement+

?expr: expr "+" term   -> add
     | expr "-" term   -> sub
     | term

?term: term "*" factor -> mul
     | term "/" factor -> div
     | factor

?factor: NUMBER        -> number
       | NAME          -> var
       | "(" expr ")"

NAME: /[a-zA-Z_][a-zA-Z0-9_]*/

%import common.NUMBER
%import common.NEWLINE
%import common.WS_INLINE
%ignore WS_INLINE
%ignore NEWLINE

